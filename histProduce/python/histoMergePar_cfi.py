import FWCore.ParameterSet.Config as cms
process = cms.PSet()


process.GeneralSet = cms.PSet(
    defaultTree= cms.string('lbSpecificDecay'),
    isSideBand = cms.bool(False),
    isLogScale = cms.bool(False),
    outFormat  = cms.string('.eps')
)
process.LegendSet = cms.PSet(
        Title = cms.string('Cut:'),
        xLeft = cms.double( 0.70 ),
        xRight= cms.double( 0.88 ),
        yLeft = cms.double( 0.65 ),
        yRight= cms.double( 0.85 ),
        SetTransparent=cms.bool( True ),
        )
process.MergedPlots = cms.VPSet(
    cms.PSet(
        MergedName = cms.string( 'massLbTk' ),
        PlotsTitle = cms.string( '#Lambda^{0}_b candidate mass ' ),
        SRegionMin = cms.double( 5.58 ),
        SRegionMax = cms.double( 5.64 ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massTkTk' ),
        PlotsTitle = cms.string( 'pK resonence mass' ),
        SRegionMin = cms.double( -1.),
        SRegionMax = cms.double( -1.),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 1.3 ),
        XaxisMax   = cms.double( 2.2 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBs_withCuts' ),
        PlotsTitle = cms.string( 'B_s candidate mass ( with #phi_1020 cuts )' ),
        SRegionMin = cms.double( 5.3 ),
        SRegionMax = cms.double( 5.44),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBd_withCuts' ),
        PlotsTitle = cms.string( 'B_d candidate mass ( with K^{*} (892) cuts )' ),
        SRegionMin = cms.double( 5.22),
        SRegionMax = cms.double( 5.32),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBs' ),
        PlotsTitle = cms.string( 'B_s candidate mass' ),
        SRegionMin = cms.double( 5.3 ),
        SRegionMax = cms.double( 5.44),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBd' ),
        PlotsTitle = cms.string( 'B_d candidate mass' ),
        SRegionMin = cms.double( 5.22),
        SRegionMax = cms.double( 5.32),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakePhi1020' ),
        PlotsTitle = cms.string( '#phi_{1020} candidate mass' ),
        SRegionMin = cms.double( 1.01 ),
        SRegionMax = cms.double( 1.035),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.90 ),
        XaxisMax   = cms.double( 1.10 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeK892' ),
        PlotsTitle = cms.string( 'K^{*}_{892} candidate mass' ),
        SRegionMin = cms.double( 0.85 ),
        SRegionMax = cms.double( 0.95 ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.8 ),
        XaxisMax   = cms.double( 1.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakePiPi' ),
        PlotsTitle = cms.string( '#pi #pi resonence mass' ),
        SRegionMin = cms.double( -1. ),
        SRegionMax = cms.double( -1. ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.2 ),
        XaxisMax   = cms.double( 1.3 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    )

process.SecondaryPlotSetting = cms.VPSet(
    cms.PSet( PreName   = cms.string( 'fd1S' ),
              TitleName = cms.string( 'fd > 1 #sigma' ), # used in TLegend
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 1 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'fd2S' ),
              TitleName = cms.string( 'fd > 2 #sigma' ), # used in TLegend
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 2 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'fd3S' ),
              TitleName = cms.string( 'fd > 3 #sigma' ), # used in TLegend
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 3 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'fd4S' ),
              TitleName = cms.string( 'fd > 4 #sigma' ), # used in TLegend
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 4 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'fd5S' ),
              TitleName = cms.string( 'fd > 5 #sigma' ), # used in TLegend
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 6 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
)



