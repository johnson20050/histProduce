import FWCore.ParameterSet.Config as cms
process = cms.PSet()


process.GeneralSet = cms.PSet(
    defaultTree= cms.string('lbSpecificDecay'),
    isSideBand = cms.bool(False),
    isLogScale = cms.bool(False),
    outFormat  = cms.string('.eps')
)
process.LegendSet = cms.PSet(
        Title = cms.string('each event chooses:'),
        xLeft = cms.double( 0.70 ),
        xRight= cms.double( 0.98 ),
        yLeft = cms.double( 0.55 ),
        yRight= cms.double( 0.89 ),
        SetTransparent=cms.bool( True ),
)

process.MergedPlots = cms.VPSet(
    cms.PSet(
        MergedName = cms.string( 'massLbTk' ),
        SRegionMin = cms.double( 5.58 ),
        SRegionMax = cms.double( 5.64 ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massTkTk' ),
        SRegionMin = cms.double( -1.),
        SRegionMax = cms.double( -1.),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 1.3 ),
        XaxisMax   = cms.double( 2.2 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBs_withCuts' ),
        SRegionMin = cms.double( 5.3 ),
        SRegionMax = cms.double( 5.44),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBd_withCuts' ),
        SRegionMin = cms.double( 5.22),
        SRegionMax = cms.double( 5.32),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBs' ),
        SRegionMin = cms.double( 5.3 ),
        SRegionMax = cms.double( 5.44),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeBd' ),
        SRegionMin = cms.double( 5.22),
        SRegionMax = cms.double( 5.32),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 5.0 ),
        XaxisMax   = cms.double( 6.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakePhi1020' ),
        SRegionMin = cms.double( 1.01 ),
        SRegionMax = cms.double( 1.035),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.90 ),
        XaxisMax   = cms.double( 1.10 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakeK892' ),
        SRegionMin = cms.double( 0.85 ),
        SRegionMax = cms.double( 0.95 ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.8 ),
        XaxisMax   = cms.double( 1.0 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    cms.PSet(
        MergedName = cms.string( 'massFakePiPi' ),
        SRegionMin = cms.double( -1. ),
        SRegionMax = cms.double( -1. ),
        XaxisTitle = cms.string( 'GeV' ),
        XaxisMin   = cms.double( 0.2 ),
        XaxisMax   = cms.double( 1.3 ),
        YaxisTitle = cms.string( 'Number' ),
        YaxisMin   = cms.double( 0. ),
        YaxisMax   = cms.double( -1.),
        ),
    )
process.SecondaryPlotSetting = cms.VPSet(
    cms.PSet( PreName   = cms.string( 'vtxprobFirst1' ),
              TitleName = cms.string( '1 candidate' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 1 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'vtxprobFirst2' ),
              TitleName = cms.string( '2 candidates' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 2 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'vtxprobFirst3' ),
              TitleName = cms.string( '3 candidates' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 3 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'vtxprobFirst4' ),
              TitleName = cms.string( '4 candidates' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 4 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'vtxprobFirst5' ),
              TitleName = cms.string( '5 candidates' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 5 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
    cms.PSet( PreName   = cms.string( 'vtxprobFirst6' ),
              TitleName = cms.string( '6 candidates' ), # used in TLegend
              SetNormalize= cms.bool( False ),
              SetFill   = cms.bool( False ),
              LineWidth = cms.int32( 2 ),
              LineColor = cms.int32( 6 ),
              FillStyle = cms.int32( 0 ),
              FillColor = cms.int32( 0 ),
              ),
)



